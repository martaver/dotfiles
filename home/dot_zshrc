#
# To profile zsh startup time:
# 1. Uncomment the zmodload line, start a shell, then 
# 2. run: zprof in ther terminal to get the profiling information
#
zmodload zsh/zprof

_ENV="$(chezmoi source-path)"

#
# IMPORTANT: Create a backup of ~/.zshrc so that if I fuck it up, I can restore from last usage
#

# If this ZSHRC is different to the one in ~/Projects/env, then copy it to that file as a backup.
# Note, we use .zshrc.backup because if we `cat ~/.zshrc` while `~/.zshrc` is executing, it returns empty.
# Also, we get an extra backup for free.
cp ~/.zshrc ~/.zshrc.backup
SHA_HOME=$(get_sha1 ~/.zshrc.backup)
SHA_DEV=$(get_sha1 $_ENV/dot_zshrc)
if [ $SHA_HOME != $SHA_DEV ] ; then
    echo "Backing up .zshrc to $_ENV/dot_zshrc"
    cat ~/.zshrc.backup > "$_ENV/dot_zshrc"
fi




# Download Znap, if it's not there yet.
[[ -f ~/Git/zsh-snap/znap.zsh ]] ||
    git clone --depth 1 -- \
        https://github.com/marlonrichert/zsh-snap.git ~/Git/zsh-snap

source ~/Git/zsh-snap/znap.zsh  # Start Znap



# `znap prompt` makes your prompt visible in just 15-40ms!
znap prompt spaceship-prompt/spaceship-prompt
SPACESHIP_PROMPT_ORDER=(
  time          # Time stamps section
  user          # Username section
  dir           # Current directory section
  host          # Hostname section
  git           # Git section (git_branch + git_status)
  #hg            # Mercurial section (hg_branch  + hg_status)
  #package       # Package version
  #gradle        # Gradle section
  #maven         # Maven section
  #node          # Node.js section
  #ruby          # Ruby section
  #elixir        # Elixir section
  #xcode         # Xcode section
  #swift         # Swift section
  #golang        # Go section
  #php           # PHP section
  #rust          # Rust section
  #haskell       # Haskell Stack section
  #julia         # Julia section
  #docker        # Docker section
  #aws           # Amazon Web Services section
  #gcloud        # Google Cloud Platform section
  #env          # virtualenv section
  #conda         # conda virtualenv section
  #pyenv         # Pyenv section
  #dotnet        # .NET section
  #ember         # Ember.js section
  #kubectl       # Kubectl context section
  #terraform     # Terraform workspace section
  #ibmcloud      # IBM Cloud section
  exec_time     # Execution time
  line_sep      # Line break
  #battery       # Battery level and status
  vi_mode       # Vi-mode indicator
  jobs          # Background jobs indicator
  exit_code     # Exit code section
  char          # Prompt character
)
# znap prompt zimfw/eriner
# znap prompt robbyrussell
# znap prompt sindresorhus/pure

yq shell-completion zsh > "${fpath[1]}/_yq"
complete -o nospace -C /usr/local/bin/terraform terraform

# `znap source` automatically downloads and starts your plugins.
znap source jscutlery/nx-completion
znap source zsh-users/zsh-completions
znap source marlonrichert/zsh-autocomplete
znap source zsh-users/zsh-autosuggestions
znap source zsh-users/zsh-syntax-highlighting

#
# git
#
znap source ohmyzsh/ohmyzsh lib/{git,theme-and-appearance}


# Disable annoying beep in shell
unsetopt BEEP

export LANG=en_US.UTF-8

# Disable 'zsh: do you wish to see all 923 possibilities (462 lines)?'
# zstyle ':completion:*' list-prompt   ''
# zstyle ':completion:*' select-prompt ''


#
# Yarn
#

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"



#
# Google Cloud
#

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/martaver/Projects/tools/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/martaver/Projects/tools/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/martaver/Projects/tools/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/martaver/Projects/tools/google-cloud-sdk/completion.zsh.inc'; fi



#
# Postgres
#

# Set Postgresql's data directory
export PGDATA=/usr/local/var/postgres



#
# Flutter
#
export PATH="$PATH:/Users/martaver/flutter/bin"



#
# Java
#
export JAVA_HOME=$(/usr/libexec/java_home)



#
# NVM
#
export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

export NVM_SYMLINK_CURRENT=true


#
# git-subrepo
#
[[ -f ~/git/git-subrepo/.rc ]] ||
    git clone --depth 1 -- \
        https://github.com/ingydotnet/git-subrepo ~/git/git-subrepo

source ~/git/git-subrepo/.rc




#
# chezmoi
#
alias -g cm="chezmoi"
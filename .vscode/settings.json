{
  "workbench.settings.editor": "json",
  "explorer.confirmDragAndDrop": false,
  "explorer.confirmDelete": false,
  "explorer.openEditors.visible": 0,
  "workbench.colorTheme": "Solarized Dark",
  "workbench.colorCustomizations": {
    "[Solarized Dark]": {
      "editorCursor.foreground": "#00fff7",
    }
  },
  "editor.tokenColorCustomizations": {
    "[Solarized Dark]": {
      "textMateRules": [
        {
          "scope": [
            "entity.name.class",
            "entity.name.type",
            "entity.name.namespace",
            "entity.name.scope-resolution"
          ],
          "settings": {
            "foreground": "#d85e2a",
            "fontStyle": ""
          }
        }
      ]
    }
  },
  "explorer.autoReveal": false,
  "files.exclude": {
    "**/node_modules": true,
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true,
    "**/.terraform": true
  },
  "gitlens.codeLens.authors.enabled": false,
  "svelte.enable-ts-plugin": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "javascript.preferences.useAliasesForRenames": false,
  "typescript.preferences.useAliasesForRenames": false,
  "debug.javascript.autoAttachFilter": "onlyWithFlag",
  "editor.minimap.enabled": false,
  "editor.accessibilitySupport": "off",
  "workbench.editor.revealIfOpen": true,
  "explorer.fileNesting.enabled": false,
  "explorer.fileNesting.expand": false,
  "diffEditor.ignoreTrimWhitespace": false,
  // "editor.suggest.showKeywords": false,
  "editor.wordBasedSuggestions": "off",
  //
  // AutoSave & AutoFormat OnSave
  //
  "editor.insertSpaces": true,
  "editor.tabSize": 2,
  "files.autoSave": "onFocusChange",
  "editor.formatOnSave": true,
  //
  "json.schemas": [
    {
      "fileMatch": [
        "appsscript.json"
      ],
      "url": "http://json.schemastore.org/appsscript"
    },
    {
      "fileMatch": [
        ".clasp.json"
      ],
      "url": "http://json.schemastore.org/clasp"
    }
  ],
  "go.toolsManagement.autoUpdate": true,
  "explorer.fileNesting.patterns": {
    "Cargo.toml": "Cargo.lock",
    "*.ts": "${capture}.typegen.ts",
    "*.tsx": "${capture}.typegen.ts",
    "*.mts": "${capture}.typegen.ts",
    "*.cts": "${capture}.typegen.ts"
  },
  "gitlens.codeLens.recentChange.enabled": false,
  "gitlens.heatmap.locations": [
    "gutter",
    "line",
    "overview"
  ],
  "git.autofetch": false,
  "gitTreeCompare.diffMode": "full",
  "security.workspace.trust.untrustedFiles": "open",
  "nix.enableLanguageServer": true,
  "nix.serverPath": "nixd",
  "nix.formatterPath": "nixfmt",
  "nix.serverSettings": {
    // settings for 'nixd' LSP
    "nixd": {
      // "eval": {
      //   // stuff
      // },
      // "formatting": {
      //   "command": "nixpkgs-fmt"
      // },
      "nixpkgs": {
        // For flake.
        // "expr": "import (builtins.getFlake \"/home/lyc/workspace/CS/OS/NixOS/flakes\").inputs.nixpkgs { }   "
        // This expression will be interpreted as "nixpkgs" toplevel
        // Nixd provides package, lib completion/information from it.
        ///
        // Resource Usage: Entries are lazily evaluated, entire nixpkgs takes 200~300MB for just "names".
        ///                Package documentation, versions, are evaluated by-need.
        "expr": "import (builtins.getFlake \"${workspaceFolder}/nix-darwin\").inputs.nixpkgs { }"
      },
      "options": {
        // By default, this entriy will be read from `import <nixpkgs> { }`
        // You can write arbitary nix expression here, to produce valid "options" declaration result.
        // Tip: for flake-based configuration, utilize `builtins.getFlake`
        "nixos": {
          "expr": "{}"
        },
        // "home-manager": {
        //     "expr": "(builtins.getFlake \"${workspaceFolder}/nix-darwin\").homeConfigurations.Sebastians-MacBook-Pro.options"
        // },
        // Tip: use ${workspaceFolder} variable to define path
        "nix-darwin": {
          "expr": "(builtins.getFlake \"${workspaceFolder}/nix-darwin\").darwinConfigurations.Sebastians-MacBook-Pro.options"
        }
      }
    }
  },
  "playwright.reuseBrowser": true,
  "playwright.showTrace": false,
  "terminal.integrated.allowedLinkSchemes": [
    "file",
    "http",
    "https",
    "mailto",
    "vscode",
    "vscode-insiders",
    "docker-desktop"
  ]
}